{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\nconst btn = document.querySelector('.js-button');\nconst reset = document.querySelector('.js-btnReset');\nconst searchInput = document.querySelector('.js-search');\nconst list =document.querySelector('.js-list');\nconst listFav = document.querySelector('.js-listFav');\nconst btnFav = document.querySelector('.js-btnFav');\nconst resetIconFav = document.querySelector('.js-resetIconFav');\n\n\nlet results = [];\nlet favorites= [];\nlet newFav = [];\n\n//función para borrar los resultados\nfunction clearResults(){\n    results = '';\n}\nfunction handleReset(ev){\n    let resetList = renderList;\n    ev.preventDefault();\n     clearResults();\n     list.innerHTML='';\n     resetList='';\n    \n       \n}\nreset.addEventListener('click' , handleReset);\n\n//Función para borrar todos los favoritos\n\nfunction handleResetFav(event){\n    event.preventDefault();\n    favorites = [];\n    listFav.innerHTML = '';\n        \n    localStorage.removeItem(\"data\");\n    \n    btnFav.classList.add('hidden');\n        \n    };\n    \n\n\nbtnFav.addEventListener('click' , handleResetFav);\n\n\n//Función principal favoritos\n\nfunction handleFav(event){\nconst idSelected = parseInt(event.currentTarget.id);\nconst animeFound = results.data.find((result) => result.mal_id === idSelected);\nconst favFound = favorites.findIndex ((fav) => fav.mal_id === idSelected);\nif(favFound === -1){\n    favorites.push(animeFound);\n   if(btnFav.classList.contains('hidden')){\n       btnFav.classList.remove('hidden')\n   } \n\n} else {\n        favorites.splice(favFound, 1);\n    }\nrenderList();\nrenderFav();\nlistenerAnime();\nlocalStorage.setItem('data', JSON.stringify(favorites));\n};\n\n//Función parapintar los favoritos\n\nfunction renderFav(){\n    let newHtml = [];\n    const wrongImageFav = 'https://cdn.myanimelist.net/img/sp/icon/apple-touch-icon-256.png';\n    for (const eachFav of favorites){\n        \n        newHtml +=`<li class='favItem fav-colorList js-favList' id='${eachFav.mal_id}'>`;\n        newHtml += `<h2 class= 'title-fav  js-favTitle'>${eachFav.title} </h2>`;\n        if(eachFav.images.jpg.image_url === wrongImageFav){\n            newHtml += `<img src=${'https://via.placeholder.com/210x295/ffffff/666666/?text=TV'} class='imageFav' alt=\"imagen\"/>`;\n        } else {\n            newHtml += `<img src='${eachFav.images.jpg.image_url}' alt='img' class='js-imageFav imageFav'/>`;\n\n        }\n        newHtml+=`<button id='${eachFav.mal_id}' class='resetIconFav js-resetIconFav'><i class='fa-solid fa-circle-xmark'></i></button>`;\n         } \n        \n\nlistFav.innerHTML = newHtml; \nlistenerResetFav()    \nlistenerAnime();\n\n}\n\n\nfunction listenerAnime(){\n    const liAnime = document.querySelectorAll('.js-eachList');\n    for (const li of liAnime) {\n        li.addEventListener('click', handleFav);\n        \n    }\n};\n\n// Resultados API y pintarlos\n\nbtn.addEventListener('click', (event)=> {\n    event.preventDefault();\n    let searchInputValue = searchInput.value;\n\nfetch(`https://api.jikan.moe/v4/anime?q=${searchInputValue}`)\n.then((response) => response.json())\n.then ((data) => {\n    results = data;\n    renderList(results);\n   \n        });\n    });\n\n\nconst renderList = (arrayresults) =>{\n    let html ='';\n    let classFav ='';\n    for (const eachResult of results.data) {\n        const wrongImage = 'https://cdn.myanimelist.net/img/sp/icon/apple-touch-icon-256.png';\n        const favFoundIndex = favorites.findIndex((fav) => eachResult.mal_id === fav.mal_id);\n        if(favFoundIndex !== -1){\n            classFav = 'fav-color';\n            \n\n        } else {\n            classFav = '';\n        }\n      \n       \n        html +=`<li class= 'list  js-eachList ${classFav}' id='${eachResult.mal_id}'>`;\n        if(eachResult.images.jpg.image_url === wrongImage){\n            html += `<img src=${'https://via.placeholder.com/210x295/ffffff/666666/?text=TV'} class='image' alt=\"imagen\"/>`;\n        } else {\n            html += `<img src='${eachResult.images.jpg.image_url}' alt='img' class='js-image image'/>`;\n\n        }\n        html += `<h2 class= 'title js-title ${classFav}'>${eachResult.title} </h2>`;\n        \n    }\n    \n\nlist.innerHTML = html;\nlistenerAnime();\n};\n\n\n// función para almacenar en el Local Storage \n\nfunction onLoad (){\n    const dataLocalStorage = JSON.parse(localStorage.getItem('data'));\n    if (dataLocalStorage)  {\n        favorites = dataLocalStorage;\n        renderFav();  \n    }\n}\nonLoad();\n\n//Función para resetear cada uno de los favoritos\n\n\nfunction handleResetEachFav(event){\n   \n    event.preventDefault();\n    const idResetSelect = parseInt(event.currentTarget.id);\n   \n    const resetFavFound = favorites.findIndex((fav) => fav.mal_id=== idResetSelect);\n    btnFav.classList.add('hidden');\n    if(resetFavFound !== -1){\n        favorites.splice(resetFavFound, 1);\n    if(btnFav.classList.contains('hidden')){\n            btnFav.classList.remove('hidden')\n    }\n    }\n\n    renderFav();\n    listenerResetFav();\n    localStorage.setItem('data', JSON.stringify(favorites));\n};\n\nfunction listenerResetFav(){\n    const liFavIcon = document.querySelectorAll('.js-resetIconFav');\n    for (const eachIconFav of liFavIcon) {\n        eachIconFav.addEventListener('click' ,handleResetEachFav);\n    }\n   \n};\n\n"]}